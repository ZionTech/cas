<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
    <description>
        This is the main Spring configuration file with some of the main "core" classes defined. You shouldn't really
        modify this unless you know what you're doing!
    </description>

    <!--
    | The base-package indicates where components stored. Spring will scan this
    | folder and find out the annotated beans and register it in Spring container.
    -->
    <context:component-scan base-package="org.jasig.cas" />
    <context:annotation-config/>

    <!--
      Including this aspectj-autoproxy element will cause spring to automatically
      create proxies around any beans defined in this file that match the pointcuts
      of any aspects defined in this file.
    -->
    <aop:aspectj-autoproxy/>

    <!-- ADVISORS -->
    <bean id="advisorAutoProxyCreator"
          class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>

    <!-- CAS Application Context Configuration -->
    <util:list id="serviceFactoryList" value-type="org.jasig.cas.authentication.principal.ServiceFactory">
        <ref bean="webApplicationServiceFactory" />
    </util:list>

    <util:list id="argumentExtractors">
        <ref bean="casArgumentExtractor"/>
        <ref bean="samlArgumentExtractor"/>
    </util:list>    

    <util:map id="uniqueIdGeneratorsMap">
  		<entry key="org.jasig.cas.authentication.principal.SimpleWebApplicationServiceImpl" value-ref="serviceTicketUniqueIdGenerator" />
  		<entry key="org.jasig.cas.support.openid.authentication.principal.OpenIdService" value-ref="serviceTicketUniqueIdGenerator" />
  		<entry key="org.jasig.cas.support.saml.authentication.principal.SamlService" value-ref="samlServiceTicketUniqueIdGenerator" />
	</util:map>

    <bean id="passThroughController" class="org.springframework.web.servlet.mvc.UrlFilenameViewController"/>

    <bean id="handlerMappingC" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping"
          p:order="1000"
          p:alwaysUseFullPath="true">
        <property name="mappings">
            <util:properties>
                <prop key="/authorizationFailure.html">passThroughController</prop>
			    <prop key="/samlValidate">samlValidateController</prop>
            </util:properties>
        </property>
        <!--
         uncomment this to enable sending PageRequest events.
         <property
           name="interceptors">
           <list>
             <ref bean="pageRequestHandlerInterceptorAdapter" />
           </list>
         </property>
          -->
    </bean>
    
    <bean id="facebook1" class="org.pac4j.oauth.client.FacebookClient">
  		<property name="key" value="159510941087159" />
  		<property name="secret" value="4ca0e4c2ea4add32d6774bef5732b4a5" />
  		<property name="scope" value="email,public_profile,user_friends" />
	</bean>
	<bean id="twitter1" class="org.pac4j.oauth.client.TwitterClient">
  		<property name="key" value="x5xdSG46Q1OBnhvhu2doG1jdc" />
  		<property name="secret" value="29biRk5CGwfDA3MgCBHX1Hw6JM8dhmGBt0DCwzCHpWFDX7C1zs" />
	</bean>
	<bean id="google1" class="org.pac4j.oauth.client.Google2Client">
  		<property name="key" value="503859240112-7ltpv749p4tjl1kfb95nb3pruqck05a3.apps.googleusercontent.com" />
  		<property name="secret" value="F4uI-dUyyUTyQOIeJVQ71dff" />
  		<property name="scope" value="EMAIL_AND_PROFILE" />
	</bean>
	<bean id="linkedin1" class="org.pac4j.oauth.client.LinkedIn2Client">
  		<property name="key" value="75mebxdqhzi23f" />
  		<property name="secret" value="Gu8ZK9n4NlWC9MJe" />
  		<property name="scope" value="r_basicprofile,r_emailaddress" />
	</bean>
</beans>
